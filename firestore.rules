rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidScript() {
      return request.resource.data.keys().hasAll(['userId', 'script', 'createdAt']) &&
             request.resource.data.userId == request.auth.uid;
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        subscriptionId == request.auth.uid
      );
      allow write: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        subscriptionId == request.auth.uid
      );
      
      // Add index for faster queries
      allow list: if isAuthenticated() && 
                    resource.data.userId == request.auth.uid;
    }

    match /scripts/{scriptId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && isValidScript();
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Add index for faster queries
      allow list: if isAuthenticated() && 
                    resource.data.userId == request.auth.uid;
    }
  }
} 